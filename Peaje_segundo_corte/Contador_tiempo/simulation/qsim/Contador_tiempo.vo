// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.1.0 Build 162 10/23/2013 SJ Web Edition"

// DATE "05/15/2024 14:51:00"

// 
// Device: Altera EP3C16F484C6 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module Contador_tiempo (
	CLK,
	enable,
	reset,
	count,
	minsal);
input 	CLK;
input 	enable;
input 	reset;
output 	[2:0] count;
output 	minsal;

// Design Ports Information
// count[0]	=>  Location: PIN_AA4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// count[1]	=>  Location: PIN_V7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// count[2]	=>  Location: PIN_AB4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// minsal	=>  Location: PIN_W6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// CLK	=>  Location: PIN_G2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// reset	=>  Location: PIN_AB3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// enable	=>  Location: PIN_Y7,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \count[0]~output_o ;
wire \count[1]~output_o ;
wire \count[2]~output_o ;
wire \minsal~output_o ;
wire \CLK~input_o ;
wire \CLK~inputclkctrl_outclk ;
wire \cnt[0]~5_combout ;
wire \reset~input_o ;
wire \cnt[0]~6 ;
wire \cnt[1]~9_combout ;
wire \enable~input_o ;
wire \cnt[0]~8_combout ;
wire \cnt[1]~10 ;
wire \cnt[2]~11_combout ;
wire \cnt[2]~12 ;
wire \cnt[3]~13_combout ;
wire \cnt[3]~14 ;
wire \cnt[4]~15_combout ;
wire \minsal~0_combout ;
wire \cnt[0]~7_combout ;
wire \minsal~1_combout ;
wire \minsal~2_combout ;
wire \minsal~reg0_q ;
wire [4:0] cnt;


// Location: IOOBUF_X7_Y0_N9
cycloneiii_io_obuf \count[0]~output (
	.i(cnt[0]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\count[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \count[0]~output .bus_hold = "false";
defparam \count[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X7_Y0_N16
cycloneiii_io_obuf \count[1]~output (
	.i(cnt[1]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\count[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \count[1]~output .bus_hold = "false";
defparam \count[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X7_Y0_N2
cycloneiii_io_obuf \count[2]~output (
	.i(cnt[2]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\count[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \count[2]~output .bus_hold = "false";
defparam \count[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X7_Y0_N23
cycloneiii_io_obuf \minsal~output (
	.i(\minsal~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\minsal~output_o ),
	.obar());
// synopsys translate_off
defparam \minsal~output .bus_hold = "false";
defparam \minsal~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y14_N1
cycloneiii_io_ibuf \CLK~input (
	.i(CLK),
	.ibar(gnd),
	.o(\CLK~input_o ));
// synopsys translate_off
defparam \CLK~input .bus_hold = "false";
defparam \CLK~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G4
cycloneiii_clkctrl \CLK~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\CLK~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\CLK~inputclkctrl_outclk ));
// synopsys translate_off
defparam \CLK~inputclkctrl .clock_type = "global clock";
defparam \CLK~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: LCCOMB_X8_Y1_N6
cycloneiii_lcell_comb \cnt[0]~5 (
// Equation(s):
// \cnt[0]~5_combout  = cnt[0] $ (VCC)
// \cnt[0]~6  = CARRY(cnt[0])

	.dataa(cnt[0]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(gnd),
	.combout(\cnt[0]~5_combout ),
	.cout(\cnt[0]~6 ));
// synopsys translate_off
defparam \cnt[0]~5 .lut_mask = 16'h55AA;
defparam \cnt[0]~5 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X7_Y0_N29
cycloneiii_io_ibuf \reset~input (
	.i(reset),
	.ibar(gnd),
	.o(\reset~input_o ));
// synopsys translate_off
defparam \reset~input .bus_hold = "false";
defparam \reset~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X8_Y1_N8
cycloneiii_lcell_comb \cnt[1]~9 (
// Equation(s):
// \cnt[1]~9_combout  = (cnt[1] & (!\cnt[0]~6 )) # (!cnt[1] & ((\cnt[0]~6 ) # (GND)))
// \cnt[1]~10  = CARRY((!\cnt[0]~6 ) # (!cnt[1]))

	.dataa(gnd),
	.datab(cnt[1]),
	.datac(gnd),
	.datad(vcc),
	.cin(\cnt[0]~6 ),
	.combout(\cnt[1]~9_combout ),
	.cout(\cnt[1]~10 ));
// synopsys translate_off
defparam \cnt[1]~9 .lut_mask = 16'h3C3F;
defparam \cnt[1]~9 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: IOIBUF_X9_Y0_N8
cycloneiii_io_ibuf \enable~input (
	.i(enable),
	.ibar(gnd),
	.o(\enable~input_o ));
// synopsys translate_off
defparam \enable~input .bus_hold = "false";
defparam \enable~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X8_Y1_N16
cycloneiii_lcell_comb \cnt[0]~8 (
// Equation(s):
// \cnt[0]~8_combout  = (\enable~input_o ) # (!\reset~input_o )

	.dataa(\reset~input_o ),
	.datab(gnd),
	.datac(gnd),
	.datad(\enable~input_o ),
	.cin(gnd),
	.combout(\cnt[0]~8_combout ),
	.cout());
// synopsys translate_off
defparam \cnt[0]~8 .lut_mask = 16'hFF55;
defparam \cnt[0]~8 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X8_Y1_N9
dffeas \cnt[1] (
	.clk(\CLK~inputclkctrl_outclk ),
	.d(\cnt[1]~9_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\cnt[0]~7_combout ),
	.sload(gnd),
	.ena(\cnt[0]~8_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt[1]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt[1] .is_wysiwyg = "true";
defparam \cnt[1] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X8_Y1_N10
cycloneiii_lcell_comb \cnt[2]~11 (
// Equation(s):
// \cnt[2]~11_combout  = (cnt[2] & (\cnt[1]~10  $ (GND))) # (!cnt[2] & (!\cnt[1]~10  & VCC))
// \cnt[2]~12  = CARRY((cnt[2] & !\cnt[1]~10 ))

	.dataa(cnt[2]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\cnt[1]~10 ),
	.combout(\cnt[2]~11_combout ),
	.cout(\cnt[2]~12 ));
// synopsys translate_off
defparam \cnt[2]~11 .lut_mask = 16'hA50A;
defparam \cnt[2]~11 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X8_Y1_N11
dffeas \cnt[2] (
	.clk(\CLK~inputclkctrl_outclk ),
	.d(\cnt[2]~11_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\cnt[0]~7_combout ),
	.sload(gnd),
	.ena(\cnt[0]~8_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt[2]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt[2] .is_wysiwyg = "true";
defparam \cnt[2] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X8_Y1_N12
cycloneiii_lcell_comb \cnt[3]~13 (
// Equation(s):
// \cnt[3]~13_combout  = (cnt[3] & (!\cnt[2]~12 )) # (!cnt[3] & ((\cnt[2]~12 ) # (GND)))
// \cnt[3]~14  = CARRY((!\cnt[2]~12 ) # (!cnt[3]))

	.dataa(cnt[3]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\cnt[2]~12 ),
	.combout(\cnt[3]~13_combout ),
	.cout(\cnt[3]~14 ));
// synopsys translate_off
defparam \cnt[3]~13 .lut_mask = 16'h5A5F;
defparam \cnt[3]~13 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X8_Y1_N13
dffeas \cnt[3] (
	.clk(\CLK~inputclkctrl_outclk ),
	.d(\cnt[3]~13_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\cnt[0]~7_combout ),
	.sload(gnd),
	.ena(\cnt[0]~8_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt[3]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt[3] .is_wysiwyg = "true";
defparam \cnt[3] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X8_Y1_N14
cycloneiii_lcell_comb \cnt[4]~15 (
// Equation(s):
// \cnt[4]~15_combout  = \cnt[3]~14  $ (!cnt[4])

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(cnt[4]),
	.cin(\cnt[3]~14 ),
	.combout(\cnt[4]~15_combout ),
	.cout());
// synopsys translate_off
defparam \cnt[4]~15 .lut_mask = 16'hF00F;
defparam \cnt[4]~15 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X8_Y1_N15
dffeas \cnt[4] (
	.clk(\CLK~inputclkctrl_outclk ),
	.d(\cnt[4]~15_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\cnt[0]~7_combout ),
	.sload(gnd),
	.ena(\cnt[0]~8_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt[4]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt[4] .is_wysiwyg = "true";
defparam \cnt[4] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X8_Y1_N18
cycloneiii_lcell_comb \minsal~0 (
// Equation(s):
// \minsal~0_combout  = (cnt[2] & (cnt[1] & (!cnt[4] & !cnt[3])))

	.dataa(cnt[2]),
	.datab(cnt[1]),
	.datac(cnt[4]),
	.datad(cnt[3]),
	.cin(gnd),
	.combout(\minsal~0_combout ),
	.cout());
// synopsys translate_off
defparam \minsal~0 .lut_mask = 16'h0008;
defparam \minsal~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X8_Y1_N24
cycloneiii_lcell_comb \cnt[0]~7 (
// Equation(s):
// \cnt[0]~7_combout  = ((cnt[0] & \minsal~0_combout )) # (!\reset~input_o )

	.dataa(\reset~input_o ),
	.datab(gnd),
	.datac(cnt[0]),
	.datad(\minsal~0_combout ),
	.cin(gnd),
	.combout(\cnt[0]~7_combout ),
	.cout());
// synopsys translate_off
defparam \cnt[0]~7 .lut_mask = 16'hF555;
defparam \cnt[0]~7 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X8_Y1_N7
dffeas \cnt[0] (
	.clk(\CLK~inputclkctrl_outclk ),
	.d(\cnt[0]~5_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\cnt[0]~7_combout ),
	.sload(gnd),
	.ena(\cnt[0]~8_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt[0]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt[0] .is_wysiwyg = "true";
defparam \cnt[0] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X8_Y1_N2
cycloneiii_lcell_comb \minsal~1 (
// Equation(s):
// \minsal~1_combout  = (\minsal~0_combout  & (!cnt[0] & ((\reset~input_o ) # (\minsal~reg0_q )))) # (!\minsal~0_combout  & (((\minsal~reg0_q ))))

	.dataa(\reset~input_o ),
	.datab(\minsal~reg0_q ),
	.datac(cnt[0]),
	.datad(\minsal~0_combout ),
	.cin(gnd),
	.combout(\minsal~1_combout ),
	.cout());
// synopsys translate_off
defparam \minsal~1 .lut_mask = 16'h0ECC;
defparam \minsal~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X8_Y1_N28
cycloneiii_lcell_comb \minsal~2 (
// Equation(s):
// \minsal~2_combout  = (\reset~input_o  & (\enable~input_o  & ((\minsal~1_combout )))) # (!\reset~input_o  & ((\minsal~reg0_q ) # ((\enable~input_o  & \minsal~1_combout ))))

	.dataa(\reset~input_o ),
	.datab(\enable~input_o ),
	.datac(\minsal~reg0_q ),
	.datad(\minsal~1_combout ),
	.cin(gnd),
	.combout(\minsal~2_combout ),
	.cout());
// synopsys translate_off
defparam \minsal~2 .lut_mask = 16'hDC50;
defparam \minsal~2 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X8_Y1_N29
dffeas \minsal~reg0 (
	.clk(\CLK~inputclkctrl_outclk ),
	.d(\minsal~2_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\minsal~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \minsal~reg0 .is_wysiwyg = "true";
defparam \minsal~reg0 .power_up = "low";
// synopsys translate_on

assign count[0] = \count[0]~output_o ;

assign count[1] = \count[1]~output_o ;

assign count[2] = \count[2]~output_o ;

assign minsal = \minsal~output_o ;

endmodule
